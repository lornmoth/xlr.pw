// Code generated by qtc from "thread.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line server/src/meguca/templates/thread.qtpl:1
package templates

//line server/src/meguca/templates/thread.qtpl:1
import "strconv"

//line server/src/meguca/templates/thread.qtpl:2
import "meguca/lang"

//line server/src/meguca/templates/thread.qtpl:3
import "meguca/common"

//line server/src/meguca/templates/thread.qtpl:4
import "meguca/config"

//line server/src/meguca/templates/thread.qtpl:5
import "meguca/auth"

//line server/src/meguca/templates/thread.qtpl:6
import "encoding/json"

//line server/src/meguca/templates/thread.qtpl:8
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line server/src/meguca/templates/thread.qtpl:8
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line server/src/meguca/templates/thread.qtpl:8
func streamrenderThread(qw422016 *qt422016.Writer, postHTML []byte, id uint64, board string, abbrev, locked bool, pos auth.ModerationLevel) {
	//line server/src/meguca/templates/thread.qtpl:9
	conf := config.GetBoardConfigs(board)

	//line server/src/meguca/templates/thread.qtpl:10
	ln := lang.Get()

	//line server/src/meguca/templates/thread.qtpl:11
	if !locked {
		//line server/src/meguca/templates/thread.qtpl:11
		qw422016.N().S(`<form id="new-reply-form" action="/api/create-reply" method="post" enctype="multipart/form-data" class="top-margin hidden"><input name="board" type="text" value="`)
		//line server/src/meguca/templates/thread.qtpl:13
		qw422016.N().S(board)
		//line server/src/meguca/templates/thread.qtpl:13
		qw422016.N().S(`" hidden><input name="op" type="text" value="`)
		//line server/src/meguca/templates/thread.qtpl:14
		qw422016.N().S(strconv.FormatUint(id, 10))
		//line server/src/meguca/templates/thread.qtpl:14
		qw422016.N().S(`" hidden>`)
		//line server/src/meguca/templates/thread.qtpl:15
		streaminput(qw422016, sageSpec.wrap(), ln)
		//line server/src/meguca/templates/thread.qtpl:16
		streamnoscriptPostCreationFields(qw422016, pos)
		//line server/src/meguca/templates/thread.qtpl:17
		if !conf.TextOnly {
			//line server/src/meguca/templates/thread.qtpl:18
			streamuploadForm(qw422016)
			//line server/src/meguca/templates/thread.qtpl:19
		}
		//line server/src/meguca/templates/thread.qtpl:20
		streamcaptcha(qw422016, board)
		//line server/src/meguca/templates/thread.qtpl:21
		streamsubmit(qw422016, true)
		//line server/src/meguca/templates/thread.qtpl:21
		qw422016.N().S(`</form>`)
		//line server/src/meguca/templates/thread.qtpl:23
	}
	//line server/src/meguca/templates/thread.qtpl:23
	qw422016.N().S(`<span class="aside-container top-margin"><span class="act" id="top"><a href="#bottom">`)
	//line server/src/meguca/templates/thread.qtpl:27
	qw422016.N().S(ln.Common.UI["bottom"])
	//line server/src/meguca/templates/thread.qtpl:27
	qw422016.N().S(`</a></span><span class="act"><a href=".">`)
	//line server/src/meguca/templates/thread.qtpl:32
	qw422016.N().S(ln.Common.UI["return"])
	//line server/src/meguca/templates/thread.qtpl:32
	qw422016.N().S(`</a></span><span class="act"><a href="catalog">`)
	//line server/src/meguca/templates/thread.qtpl:37
	qw422016.N().S(ln.Common.UI["catalog"])
	//line server/src/meguca/templates/thread.qtpl:37
	qw422016.N().S(`</a></span><span id="expand-images" class="act noscript-hide"><a>`)
	//line server/src/meguca/templates/thread.qtpl:42
	qw422016.N().S(ln.Common.Posts["expandImages"])
	//line server/src/meguca/templates/thread.qtpl:42
	qw422016.N().S(`</a></span>`)
	//line server/src/meguca/templates/thread.qtpl:45
	streamhoverReveal(qw422016, "span", conf.Notice, ln.Common.UI["showNotice"])
	//line server/src/meguca/templates/thread.qtpl:46
	streamhoverReveal(qw422016, "span", conf.Rules, ln.Common.UI["rules"])
	//line server/src/meguca/templates/thread.qtpl:46
	qw422016.N().S(`</span><hr>`)
	//line server/src/meguca/templates/thread.qtpl:49
	qw422016.N().Z(postHTML)
	//line server/src/meguca/templates/thread.qtpl:49
	qw422016.N().S(`<div id="bottom-spacer"></div>`)
	//line server/src/meguca/templates/thread.qtpl:51
	if !locked {
		//line server/src/meguca/templates/thread.qtpl:51
		qw422016.N().S(`<aside class="act posting glass noscript-hide"><a>`)
		//line server/src/meguca/templates/thread.qtpl:54
		qw422016.N().S(ln.Common.UI["reply"])
		//line server/src/meguca/templates/thread.qtpl:54
		qw422016.N().S(`</a></aside>`)
		//line server/src/meguca/templates/thread.qtpl:57
	}
	//line server/src/meguca/templates/thread.qtpl:57
	qw422016.N().S(`<hr><span class="aside-container"><span class="act" id="bottom"><a href=".">`)
	//line server/src/meguca/templates/thread.qtpl:62
	qw422016.N().S(ln.Common.UI["return"])
	//line server/src/meguca/templates/thread.qtpl:62
	qw422016.N().S(`</a></span><span class="act"><a href="catalog">`)
	//line server/src/meguca/templates/thread.qtpl:67
	qw422016.N().S(ln.Common.UI["catalog"])
	//line server/src/meguca/templates/thread.qtpl:67
	qw422016.N().S(`</a></span><span class="act"><a href="#top">`)
	//line server/src/meguca/templates/thread.qtpl:72
	qw422016.N().S(ln.Common.UI["top"])
	//line server/src/meguca/templates/thread.qtpl:72
	qw422016.N().S(`</a></span>`)
	//line server/src/meguca/templates/thread.qtpl:75
	if !abbrev {
		//line server/src/meguca/templates/thread.qtpl:75
		qw422016.N().S(`<span class="act"><a href="?last=100#bottom">`)
		//line server/src/meguca/templates/thread.qtpl:78
		qw422016.N().S(ln.Common.UI["last"])
		//line server/src/meguca/templates/thread.qtpl:78
		qw422016.N().S(` `)
		//line server/src/meguca/templates/thread.qtpl:78
		qw422016.N().S(`100</a></span>`)
		//line server/src/meguca/templates/thread.qtpl:81
	}
	//line server/src/meguca/templates/thread.qtpl:81
	qw422016.N().S(`<span id="lock" style="visibility: hidden;">`)
	//line server/src/meguca/templates/thread.qtpl:83
	qw422016.N().S(ln.Common.UI["lockedToBottom"])
	//line server/src/meguca/templates/thread.qtpl:83
	qw422016.N().S(`</span></span>`)
	//line server/src/meguca/templates/thread.qtpl:86
	streamloadingImage(qw422016, board)
//line server/src/meguca/templates/thread.qtpl:87
}

//line server/src/meguca/templates/thread.qtpl:87
func writerenderThread(qq422016 qtio422016.Writer, postHTML []byte, id uint64, board string, abbrev, locked bool, pos auth.ModerationLevel) {
	//line server/src/meguca/templates/thread.qtpl:87
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line server/src/meguca/templates/thread.qtpl:87
	streamrenderThread(qw422016, postHTML, id, board, abbrev, locked, pos)
	//line server/src/meguca/templates/thread.qtpl:87
	qt422016.ReleaseWriter(qw422016)
//line server/src/meguca/templates/thread.qtpl:87
}

//line server/src/meguca/templates/thread.qtpl:87
func renderThread(postHTML []byte, id uint64, board string, abbrev, locked bool, pos auth.ModerationLevel) string {
	//line server/src/meguca/templates/thread.qtpl:87
	qb422016 := qt422016.AcquireByteBuffer()
	//line server/src/meguca/templates/thread.qtpl:87
	writerenderThread(qb422016, postHTML, id, board, abbrev, locked, pos)
	//line server/src/meguca/templates/thread.qtpl:87
	qs422016 := string(qb422016.B)
	//line server/src/meguca/templates/thread.qtpl:87
	qt422016.ReleaseByteBuffer(qb422016)
	//line server/src/meguca/templates/thread.qtpl:87
	return qs422016
//line server/src/meguca/templates/thread.qtpl:87
}

// ThreadPosts renders the post content of a thread. Separate function to allow
// caching of generated posts.

//line server/src/meguca/templates/thread.qtpl:91
func StreamThreadPosts(qw422016 *qt422016.Writer, t common.Thread, json []byte) {
	//line server/src/meguca/templates/thread.qtpl:91
	qw422016.N().S(`<section id="thread-container" data-id="`)
	//line server/src/meguca/templates/thread.qtpl:92
	qw422016.N().S(strconv.FormatUint(t.ID, 10))
	//line server/src/meguca/templates/thread.qtpl:92
	qw422016.N().S(`">`)
	//line server/src/meguca/templates/thread.qtpl:93
	bls := extractBacklinks(1<<10, t)

	//line server/src/meguca/templates/thread.qtpl:94
	streamrenderThreadPosts(qw422016, t, bls, config.Get().RootURL, false)
	//line server/src/meguca/templates/thread.qtpl:94
	qw422016.N().S(`<script id="post-data" type="application/json">`)
	//line server/src/meguca/templates/thread.qtpl:96
	qw422016.N().Z(json)
	//line server/src/meguca/templates/thread.qtpl:96
	qw422016.N().S(`</script>`)
	//line server/src/meguca/templates/thread.qtpl:98
	streamencodeBacklinks(qw422016, bls)
	//line server/src/meguca/templates/thread.qtpl:98
	qw422016.N().S(`</section><script id="board-configs" type="application/json">`)
	//line server/src/meguca/templates/thread.qtpl:101
	qw422016.N().Z(config.GetBoardConfigs(t.Board).JSON)
	//line server/src/meguca/templates/thread.qtpl:101
	qw422016.N().S(`</script>`)
//line server/src/meguca/templates/thread.qtpl:103
}

//line server/src/meguca/templates/thread.qtpl:103
func WriteThreadPosts(qq422016 qtio422016.Writer, t common.Thread, json []byte) {
	//line server/src/meguca/templates/thread.qtpl:103
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line server/src/meguca/templates/thread.qtpl:103
	StreamThreadPosts(qw422016, t, json)
	//line server/src/meguca/templates/thread.qtpl:103
	qt422016.ReleaseWriter(qw422016)
//line server/src/meguca/templates/thread.qtpl:103
}

//line server/src/meguca/templates/thread.qtpl:103
func ThreadPosts(t common.Thread, json []byte) string {
	//line server/src/meguca/templates/thread.qtpl:103
	qb422016 := qt422016.AcquireByteBuffer()
	//line server/src/meguca/templates/thread.qtpl:103
	WriteThreadPosts(qb422016, t, json)
	//line server/src/meguca/templates/thread.qtpl:103
	qs422016 := string(qb422016.B)
	//line server/src/meguca/templates/thread.qtpl:103
	qt422016.ReleaseByteBuffer(qb422016)
	//line server/src/meguca/templates/thread.qtpl:103
	return qs422016
//line server/src/meguca/templates/thread.qtpl:103
}

// Common functionality between index board pages and threads pages

//line server/src/meguca/templates/thread.qtpl:106
func streamrenderThreadPosts(qw422016 *qt422016.Writer, t common.Thread, bls backlinks, root string, index bool) {
	//line server/src/meguca/templates/thread.qtpl:107
	boardConfig := config.GetBoardConfigs(t.Board)

	//line server/src/meguca/templates/thread.qtpl:108
	c := articleContext{
		index:     index,
		sticky:    t.Sticky,
		locked:    t.Locked,
		rbText:    boardConfig.RbText,
		pyu:       boardConfig.Pyu,
		op:        t.ID,
		board:     t.Board,
		subject:   t.Subject,
		root:      root,
		backlinks: bls,
	}

	//line server/src/meguca/templates/thread.qtpl:120
	c.omit, c.imageOmit = CalculateOmit(t)

	//line server/src/meguca/templates/thread.qtpl:121
	streamrenderArticle(qw422016, t.Post, c)
	//line server/src/meguca/templates/thread.qtpl:123
	c.sticky = false

	//line server/src/meguca/templates/thread.qtpl:124
	c.locked = false

	//line server/src/meguca/templates/thread.qtpl:125
	c.omit, c.imageOmit = 0, 0

	//line server/src/meguca/templates/thread.qtpl:126
	c.subject = ""

	//line server/src/meguca/templates/thread.qtpl:127
	for _, p := range t.Posts {
		//line server/src/meguca/templates/thread.qtpl:128
		streamrenderArticle(qw422016, p, c)
		//line server/src/meguca/templates/thread.qtpl:129
	}
//line server/src/meguca/templates/thread.qtpl:130
}

//line server/src/meguca/templates/thread.qtpl:130
func writerenderThreadPosts(qq422016 qtio422016.Writer, t common.Thread, bls backlinks, root string, index bool) {
	//line server/src/meguca/templates/thread.qtpl:130
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line server/src/meguca/templates/thread.qtpl:130
	streamrenderThreadPosts(qw422016, t, bls, root, index)
	//line server/src/meguca/templates/thread.qtpl:130
	qt422016.ReleaseWriter(qw422016)
//line server/src/meguca/templates/thread.qtpl:130
}

//line server/src/meguca/templates/thread.qtpl:130
func renderThreadPosts(t common.Thread, bls backlinks, root string, index bool) string {
	//line server/src/meguca/templates/thread.qtpl:130
	qb422016 := qt422016.AcquireByteBuffer()
	//line server/src/meguca/templates/thread.qtpl:130
	writerenderThreadPosts(qb422016, t, bls, root, index)
	//line server/src/meguca/templates/thread.qtpl:130
	qs422016 := string(qb422016.B)
	//line server/src/meguca/templates/thread.qtpl:130
	qt422016.ReleaseByteBuffer(qb422016)
	//line server/src/meguca/templates/thread.qtpl:130
	return qs422016
//line server/src/meguca/templates/thread.qtpl:130
}

//line server/src/meguca/templates/thread.qtpl:132
func streamencodeBacklinks(qw422016 *qt422016.Writer, bls backlinks) {
	//line server/src/meguca/templates/thread.qtpl:132
	qw422016.N().S(`<script id="backlink-data" type="application/json">`)
	//line server/src/meguca/templates/thread.qtpl:134
	buf, _ := json.Marshal(bls)

	//line server/src/meguca/templates/thread.qtpl:135
	qw422016.N().Z(buf)
	//line server/src/meguca/templates/thread.qtpl:135
	qw422016.N().S(`</script>`)
//line server/src/meguca/templates/thread.qtpl:137
}

//line server/src/meguca/templates/thread.qtpl:137
func writeencodeBacklinks(qq422016 qtio422016.Writer, bls backlinks) {
	//line server/src/meguca/templates/thread.qtpl:137
	qw422016 := qt422016.AcquireWriter(qq422016)
	//line server/src/meguca/templates/thread.qtpl:137
	streamencodeBacklinks(qw422016, bls)
	//line server/src/meguca/templates/thread.qtpl:137
	qt422016.ReleaseWriter(qw422016)
//line server/src/meguca/templates/thread.qtpl:137
}

//line server/src/meguca/templates/thread.qtpl:137
func encodeBacklinks(bls backlinks) string {
	//line server/src/meguca/templates/thread.qtpl:137
	qb422016 := qt422016.AcquireByteBuffer()
	//line server/src/meguca/templates/thread.qtpl:137
	writeencodeBacklinks(qb422016, bls)
	//line server/src/meguca/templates/thread.qtpl:137
	qs422016 := string(qb422016.B)
	//line server/src/meguca/templates/thread.qtpl:137
	qt422016.ReleaseByteBuffer(qb422016)
	//line server/src/meguca/templates/thread.qtpl:137
	return qs422016
//line server/src/meguca/templates/thread.qtpl:137
}
